server {
  bind: ("0.0.0.0", 5051)
}

connector {
  provider: .sqlite,
  url: "sqlite::memory:"
}

entity {
  provider: .python,
  dest: "./entities"
}

request middlewares [logRequest]

@map(.get, "/")
declare nonapi handler hello(): Any

@map(.get, "/empty")
declare nonapi handler empty(): Any

@map(.get, "/echo/:data", interface: "EchoPathArguments")
declare nonapi handler echo(): Any

@map(.get, "/static/*path", interface: "StaticPathArguments")
declare nonapi handler static(): Any

interface AlterCreatedAtInput {
  id: Int
  createdAt: DateTime
}
 
model Record {
  @id @autoIncrement @readonly
  id: Int
  value: Int?
  @onSave($when(.create, $now)) @readonly
  createdAt: DateTime
  @onSave($now) @readonly
  updatedAt: DateTime
 
  declare handler alterCreatedAt(AlterCreatedAtInput): Data<Result<Record>>
}

@map(path: "/upload")
declare form handler upload(UploadInput): Data<UploadOutput>
 
interface UploadInput {
  file: File
}
 
interface UploadOutput {
  path: String
}